{"version":3,"sources":["webpack:///./src/utils/mobile-detect.js","webpack:///./src/pages/index.js"],"names":["isMobile","window","innerWidth","innerHeight","BlogIndex","data","location","React","useState","hamburgerVisible","setHamburgerVisible","toggleHamburgerIcon","useCallback","current","transformStyles","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","date","Date","currentMonth","getMonth","currentMonthToText","currentYear","getFullYear","id","href","className","onClick","hidden","animation","map","index","node","frontmatter","fields","slug","key","style","boxShadow","to","swipe","direction","duration","dangerouslySetInnerHTML","__html","description","excerpt","src","image","textAlign","width","color","pageQuery"],"mappings":"oLACaA,G,UAAW,WACtB,OAAOC,OAAOC,YAAc,KAAOD,OAAOE,aAAe,MCF3D,0CA8HeC,UA7GG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAAe,EACQC,IAAMC,UAAS,GAAxDC,EADiC,KACfC,EADe,KAGlCC,EAAsBJ,IAAMK,aAAY,WAC5CF,GAAoB,SAAAG,GAAO,OAAKA,OAC/B,CAACJ,IAEAK,EAAkB,YAElBL,IACFK,GAAmB,aAGrB,IAAMC,EAAYV,EAAKW,KAAKC,aAAaC,MACnCC,EAAQd,EAAKe,kBAAkBC,MAE/BC,EAAO,IAAIC,KACXC,EAAeF,EAAKG,WACpBC,EACJF,EAAe,GAAf,IAAwBA,EAAiBA,EAErCG,EAAcL,EAAKM,cAEzB,OACE,oCACE,yBAAKC,GAAG,cACN,6BACE,uBAAGC,KAAK,6BAAR,cACA,uBAAGA,KAAK,KAAR,WACA,uBAAGA,KAAK,KAAR,UACA,uBAAGA,KAAK,KAAR,aAEF,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,uBAAuBL,GACtC,yBAAKK,UAAU,sBAAsBJ,IAEvC,yBAAKI,UAAU,eAAf,qEAEE,6BACA,6BAHF,QAMF,yBAAKA,UAAWjB,GACd,yBACEiB,UAAU,4BACVC,QAASrB,EACTsB,OAAQxB,GAER,yBAAKsB,UAAU,mCAAf,cAEF,kBAAC,IAAD,CAAQzB,SAAUA,EAAUY,MAAOH,GACjC,yBACEgB,UAAU,YACVC,QAASrB,EACTsB,OAAQjC,GAHV,KAOA,kBAAC,IAAD,CAAKkB,MAAM,cACX,kBAAC,IAAD,CAAKgB,UAAWzB,IAChB,yBAAKsB,UAAU,YACZZ,EAAMgB,KAAI,WAAWC,GAAW,IAAnBC,EAAkB,EAAlBA,KACNnB,EAAQmB,EAAKC,YAAYpB,OAASmB,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKL,GACZ,kBAAC,IAAD,CACEK,IAAKJ,EAAKE,OAAOC,KACjBE,MAAO,CAAEC,UAAU,QACnBC,GAAIP,EAAKE,OAAOC,KAChBK,OAAK,EACLC,UAAU,OACVC,SAAU,GAEV,gCACE,4BAAK7B,IAEP,6BAASa,UAAU,uBACjB,uBAEEiB,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,WAGjD,yBACEC,IAAKf,EAAKC,YAAYe,MACtBX,MAAO,CACLY,UAAW,SACXC,MAAO,WAIb,2BACEb,MAAO,CACLc,MAAO,SAGRnB,EAAKC,YAAYhB,gBAhGxC,IA+GamC,EAAS","file":"component---src-pages-index-js-b31dd31e4e7b64c72f2e.js","sourcesContent":["// eslint-disable-next-line import/prefer-default-export\nexport const isMobile = () => {\n  return window.innerWidth <= 800 && window.innerHeight <= 600\n}\n","/* eslint-disable react/no-unescaped-entities */\n/* eslint-disable jsx-a11y/alt-text */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable react/no-array-index-key */\nimport React from \"react\"\nimport { graphql } from \"gatsby\"\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport \"./index.scss\"\nimport { isMobile } from \"../utils/mobile-detect\"\n\nconst BlogIndex = ({ data, location }) => {\n  const [hamburgerVisible, setHamburgerVisible] = React.useState(false)\n\n  const toggleHamburgerIcon = React.useCallback(() => {\n    setHamburgerVisible(current => !current)\n  }, [hamburgerVisible])\n\n  let transformStyles = \"newspaper\"\n\n  if (hamburgerVisible) {\n    transformStyles += \"--animate\"\n  }\n\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  const date = new Date()\n  const currentMonth = date.getMonth()\n  const currentMonthToText =\n    currentMonth < 10 ? `0${currentMonth}` : currentMonth\n\n  const currentYear = date.getFullYear()\n\n  return (\n    <>\n      <div id=\"paper-back\">\n        <nav>\n          <a href=\"https://vk.com/a.zharavin\">Профиль ВК</a>\n          <a href=\"#\">Обо мне</a>\n          <a href=\"#\">Работа</a>\n          <a href=\"#\">Контакты</a>\n        </nav>\n        <div className=\"current-date\">\n          <div className=\"current-date--month\">{currentMonthToText}</div>\n          <div className=\"current-date--year\">{currentYear}</div>\n        </div>\n        <div className=\"random-text\">\n          \"Еще не придумал, что именно, но уже захотел сюда что-то написать\"\n          <br />\n          <br />© Я\n        </div>\n      </div>\n      <div className={transformStyles}>\n        <div\n          className=\"newspaper-to-show-message\"\n          onClick={toggleHamburgerIcon}\n          hidden={hamburgerVisible}\n        >\n          <div className=\"newspaper-to-show-message--text\">Прочитать</div>\n        </div>\n        <Layout location={location} title={siteTitle}>\n          <div\n            className=\"hamburger\"\n            onClick={toggleHamburgerIcon}\n            hidden={isMobile}\n          >\n            &#9736;\n          </div>\n          <SEO title=\"All posts\" />\n          <Bio animation={hamburgerVisible} />\n          <div className=\"articles\">\n            {posts.map(({ node }, index) => {\n              const title = node.frontmatter.title || node.fields.slug\n              return (\n                <article key={index}>\n                  <AniLink\n                    key={node.fields.slug}\n                    style={{ boxShadow: `none` }}\n                    to={node.fields.slug}\n                    swipe\n                    direction=\"left\"\n                    duration={1}\n                  >\n                    <header>\n                      <h3>{title}</h3>\n                    </header>\n                    <section className=\"article-description\">\n                      <p\n                        // eslint-disable-next-line react/no-danger\n                        dangerouslySetInnerHTML={{\n                          __html: node.frontmatter.description || node.excerpt,\n                        }}\n                      />\n                      <img\n                        src={node.frontmatter.image}\n                        style={{\n                          textAlign: \"center\",\n                          width: \"100%\",\n                        }}\n                      />\n                    </section>\n                    <small\n                      style={{\n                        color: \"#000\",\n                      }}\n                    >\n                      {node.frontmatter.date}\n                    </small>\n                  </AniLink>\n                </article>\n              )\n            })}\n          </div>\n        </Layout>\n      </div>\n    </>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            image\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}